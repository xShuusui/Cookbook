{"version":3,"sources":["components/GlobalLayout.tsx","components/Layout.tsx","pages/dashboard/components/RecipeList.tsx","pages/dashboard/DashboardPage.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","Layout","children","MaxWidthCSS","css","Header","styled","header","Main","main","Footer","footer","NavigationList","ul","NavigationItem","li","IngredientList","RecipeList","RecipeItem","recipe","name","instructions","rating","ingredients","DashboardPage","useState","recipes","map","App","ReactDOM","render","document","getElementById"],"mappings":"ocAEO,IAAMA,EAAcC,YAAH,K,80BCCjB,IAAMC,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAIzBC,EAAcC,YAAH,KAKXC,EAASC,IAAOC,OAAV,IARS,QAiBfC,EAAOF,IAAOG,KAAV,IAjBW,OACA,OAkBfN,GAGAO,EAASJ,IAAOK,OAAV,IArBS,QAyBfC,EAAiBN,IAAOO,GAAV,KAKdC,EAAiBR,IAAOS,GAAV,KAKpB,OACI,oCACI,kBAACV,EAAD,cAEI,kBAACO,EAAD,KACI,kBAACE,EAAD,aACA,kBAACA,EAAD,eACA,kBAACA,EAAD,qBAGR,kBAACN,EAAD,KAAON,GACP,kBAACQ,EAAD,iB,+SC/CZ,IAAMM,EAAiBV,IAAOO,GAAV,KAKPI,EAAaX,IAAOO,GAAV,KAUVK,EAAwC,SAAC,GAE/C,IAAD,IADFC,OAAUC,EACR,EADQA,KAAMC,EACd,EADcA,aAAcC,EAC5B,EAD4BA,OAC5B,EADoCC,YAEtC,OACI,oCACI,6BACI,6BACKH,EADL,KACaC,EADb,KAC6BC,GAE7B,kBAACN,EAAD,uBCxBHQ,EAA0B,WAAO,IAAD,EACXC,mBAAmB,IADR,mBAClCC,EADkC,UAczC,OACI,oCACI,kBAACT,EAAD,KACKS,EAAQC,KAAI,SAACR,GAAD,OACT,kBAAC,EAAD,CAAYA,OAAQA,UChB3BS,EAAgB,WACzB,OACI,oCACI,kBAAC7B,EAAD,MACA,kBAAC,EAAD,KACI,4CACA,kBAAC,EAAD,SCRhB8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.79aba0b5.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n    }\n    body, html {\n        margin: 0;\n        font-family: sans-serif;\n        heigth: 100%;\n        width: 100%;\n    }\n`;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport const Layout: React.FC = ({ children }) => {\n    const headerHeight = \"85px\";\n    const footerHeight = \"50px\";\n\n    const MaxWidthCSS = css`\n        max-width: 860px;\n        margin: auto;\n    `;\n\n    const Header = styled.header`\n        height: ${headerHeight};\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        padding: 0 25px;\n    `;\n\n    const Main = styled.main`\n        min-height: calc(100vh - ${headerHeight} - ${footerHeight});\n        ${MaxWidthCSS}\n    `;\n\n    const Footer = styled.footer`\n        height: ${footerHeight};\n    `;\n\n    const NavigationList = styled.ul`\n        list-style: none;\n        display: flex;\n    `;\n\n    const NavigationItem = styled.li`\n        color: red;\n        padding: 10px 25px;\n    `;\n\n    return (\n        <>\n            <Header>\n                Header\n                <NavigationList>\n                    <NavigationItem>Home</NavigationItem>\n                    <NavigationItem>Recipe</NavigationItem>\n                    <NavigationItem>Ingredient</NavigationItem>\n                </NavigationList>\n            </Header>\n            <Main>{children}</Main>\n            <Footer>Footer</Footer>\n        </>\n    );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Recipe, RecipeIngredient, Ingredient } from \"../../../types/Recipe\";\n\nconst IngredientList = styled.ul`\n    // Style the ingredients inside recipe\n    color: red;\n`;\n\nexport const RecipeList = styled.ul`\n    // List with all recipe objects.\n    list-style: none;\n    width: 100%;\n`;\n\nexport type RecipeItemProps = {\n    recipe: Recipe;\n};\n\nexport const RecipeItem: React.FC<RecipeItemProps> = ({\n    recipe: { name, instructions, rating, ingredients },\n}) => {\n    return (\n        <>\n            <div>\n                <div>\n                    {name}, {instructions}, {rating}\n                </div>\n                <IngredientList>ingredients</IngredientList>\n            </div>\n        </>\n    );\n};\n","import React, { useState } from \"react\";\nimport { RecipeList, RecipeItem } from \"./components/RecipeList\";\nimport { Recipe } from \"../../types/Recipe\";\n\nexport const DashboardPage: React.FC = () => {\n    const [recipes, setRecipes] = useState<Recipe[]>([]);\n\n    // Get recipes from backend.\n    const fetchRecipes = async function () {\n        const recipeRequest = await fetch(\"/api/recipe\", {\n            headers: { \"Content-Type\": \"application/json\" },\n        });\n        console.log(recipeRequest);\n        if (recipeRequest.status === 200) {\n            setRecipes(await recipeRequest.json());\n        }\n    };\n\n    return (\n        <>\n            <RecipeList>\n                {recipes.map((recipe) => (\n                    <RecipeItem recipe={recipe}></RecipeItem>\n                ))}\n            </RecipeList>\n        </>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { StyledMessage, MessageType } from \"./components/Message\";\nimport { GlobalStyle } from \"./components/GlobalLayout\";\nimport { Layout } from \"./components/Layout\";\nimport { DashboardPage } from \"./pages/dashboard/DashboardPage\";\n\nexport const App: React.FC = () => {\n    return (\n        <>\n            <GlobalStyle />\n            <Layout>\n                <div>Hello World</div>\n                <DashboardPage />\n            </Layout>\n        </>\n    );\n};\n\n// let [count, setCount] = useState(0);\n\n//     const buttonOnClickHandler = () => {\n//         setCount(++count);\n//         console.log(\"clicked\");\n//     };\n\n//     const inputOnChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         console.log(e.target.value);\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <StyledMessage type={MessageType.INFO}>Hello World</StyledMessage>\n\n//             <div className=\"container\">\n//                 <button onClick={buttonOnClickHandler}>Click Me</button>\n//                 You have clicked the button {count} times.\n//                 <input type=\"text\" onChange={inputOnChangeHandler} />\n//             </div>\n//         </div>\n//     );\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}